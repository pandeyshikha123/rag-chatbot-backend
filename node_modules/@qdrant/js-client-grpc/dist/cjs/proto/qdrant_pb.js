"use strict";
// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file qdrant.proto (package qdrant, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.HealthCheckReply = exports.HealthCheckRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message qdrant.HealthCheckRequest
 */
class HealthCheckRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new HealthCheckRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new HealthCheckRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new HealthCheckRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(HealthCheckRequest, a, b);
    }
}
HealthCheckRequest.runtime = protobuf_1.proto3;
HealthCheckRequest.typeName = "qdrant.HealthCheckRequest";
HealthCheckRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
exports.HealthCheckRequest = HealthCheckRequest;
/**
 * @generated from message qdrant.HealthCheckReply
 */
class HealthCheckReply extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string title = 1;
         */
        this.title = "";
        /**
         * @generated from field: string version = 2;
         */
        this.version = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new HealthCheckReply().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new HealthCheckReply().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new HealthCheckReply().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(HealthCheckReply, a, b);
    }
}
HealthCheckReply.runtime = protobuf_1.proto3;
HealthCheckReply.typeName = "qdrant.HealthCheckReply";
HealthCheckReply.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "commit", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
exports.HealthCheckReply = HealthCheckReply;
