"use strict";
// @generated by protoc-gen-connect-es v0.10.0 with parameter "target=ts"
// @generated from file collections_service.proto (package qdrant, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Collections = void 0;
const collections_pb_js_1 = require("./collections_pb.js");
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from service qdrant.Collections
 */
exports.Collections = {
    typeName: "qdrant.Collections",
    methods: {
        /**
         *
         * Get detailed information about specified existing collection
         *
         * @generated from rpc qdrant.Collections.Get
         */
        get: {
            name: "Get",
            I: collections_pb_js_1.GetCollectionInfoRequest,
            O: collections_pb_js_1.GetCollectionInfoResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Get list name of all existing collections
         *
         * @generated from rpc qdrant.Collections.List
         */
        list: {
            name: "List",
            I: collections_pb_js_1.ListCollectionsRequest,
            O: collections_pb_js_1.ListCollectionsResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Create new collection with given parameters
         *
         * @generated from rpc qdrant.Collections.Create
         */
        create: {
            name: "Create",
            I: collections_pb_js_1.CreateCollection,
            O: collections_pb_js_1.CollectionOperationResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Update parameters of the existing collection
         *
         * @generated from rpc qdrant.Collections.Update
         */
        update: {
            name: "Update",
            I: collections_pb_js_1.UpdateCollection,
            O: collections_pb_js_1.CollectionOperationResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Drop collection and all associated data
         *
         * @generated from rpc qdrant.Collections.Delete
         */
        delete: {
            name: "Delete",
            I: collections_pb_js_1.DeleteCollection,
            O: collections_pb_js_1.CollectionOperationResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Update Aliases of the existing collection
         *
         * @generated from rpc qdrant.Collections.UpdateAliases
         */
        updateAliases: {
            name: "UpdateAliases",
            I: collections_pb_js_1.ChangeAliases,
            O: collections_pb_js_1.CollectionOperationResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Get list of all aliases for a collection
         *
         * @generated from rpc qdrant.Collections.ListCollectionAliases
         */
        listCollectionAliases: {
            name: "ListCollectionAliases",
            I: collections_pb_js_1.ListCollectionAliasesRequest,
            O: collections_pb_js_1.ListAliasesResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Get list of all aliases for all existing collections
         *
         * @generated from rpc qdrant.Collections.ListAliases
         */
        listAliases: {
            name: "ListAliases",
            I: collections_pb_js_1.ListAliasesRequest,
            O: collections_pb_js_1.ListAliasesResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Get cluster information for a collection
         *
         * @generated from rpc qdrant.Collections.CollectionClusterInfo
         */
        collectionClusterInfo: {
            name: "CollectionClusterInfo",
            I: collections_pb_js_1.CollectionClusterInfoRequest,
            O: collections_pb_js_1.CollectionClusterInfoResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Check the existence of a collection
         *
         * @generated from rpc qdrant.Collections.CollectionExists
         */
        collectionExists: {
            name: "CollectionExists",
            I: collections_pb_js_1.CollectionExistsRequest,
            O: collections_pb_js_1.CollectionExistsResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Update cluster setup for a collection
         *
         * @generated from rpc qdrant.Collections.UpdateCollectionClusterSetup
         */
        updateCollectionClusterSetup: {
            name: "UpdateCollectionClusterSetup",
            I: collections_pb_js_1.UpdateCollectionClusterSetupRequest,
            O: collections_pb_js_1.UpdateCollectionClusterSetupResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Create shard key
         *
         * @generated from rpc qdrant.Collections.CreateShardKey
         */
        createShardKey: {
            name: "CreateShardKey",
            I: collections_pb_js_1.CreateShardKeyRequest,
            O: collections_pb_js_1.CreateShardKeyResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         *
         * Delete shard key
         *
         * @generated from rpc qdrant.Collections.DeleteShardKey
         */
        deleteShardKey: {
            name: "DeleteShardKey",
            I: collections_pb_js_1.DeleteShardKeyRequest,
            O: collections_pb_js_1.DeleteShardKeyResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
    }
};
