// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file snapshots_service.proto (package qdrant, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
/**
 * @generated from message qdrant.CreateFullSnapshotRequest
 */
class CreateFullSnapshotRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateFullSnapshotRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateFullSnapshotRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateFullSnapshotRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateFullSnapshotRequest, a, b);
    }
}
CreateFullSnapshotRequest.runtime = proto3;
CreateFullSnapshotRequest.typeName = "qdrant.CreateFullSnapshotRequest";
CreateFullSnapshotRequest.fields = proto3.util.newFieldList(() => []);
export { CreateFullSnapshotRequest };
/**
 * @generated from message qdrant.ListFullSnapshotsRequest
 */
class ListFullSnapshotsRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListFullSnapshotsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListFullSnapshotsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListFullSnapshotsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ListFullSnapshotsRequest, a, b);
    }
}
ListFullSnapshotsRequest.runtime = proto3;
ListFullSnapshotsRequest.typeName = "qdrant.ListFullSnapshotsRequest";
ListFullSnapshotsRequest.fields = proto3.util.newFieldList(() => []);
export { ListFullSnapshotsRequest };
/**
 * @generated from message qdrant.DeleteFullSnapshotRequest
 */
class DeleteFullSnapshotRequest extends Message {
    constructor(data) {
        super();
        /**
         * Name of the full snapshot
         *
         * @generated from field: string snapshot_name = 1;
         */
        this.snapshotName = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DeleteFullSnapshotRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteFullSnapshotRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteFullSnapshotRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteFullSnapshotRequest, a, b);
    }
}
DeleteFullSnapshotRequest.runtime = proto3;
DeleteFullSnapshotRequest.typeName = "qdrant.DeleteFullSnapshotRequest";
DeleteFullSnapshotRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "snapshot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
export { DeleteFullSnapshotRequest };
/**
 * @generated from message qdrant.CreateSnapshotRequest
 */
class CreateSnapshotRequest extends Message {
    constructor(data) {
        super();
        /**
         * Name of the collection
         *
         * @generated from field: string collection_name = 1;
         */
        this.collectionName = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateSnapshotRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateSnapshotRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateSnapshotRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateSnapshotRequest, a, b);
    }
}
CreateSnapshotRequest.runtime = proto3;
CreateSnapshotRequest.typeName = "qdrant.CreateSnapshotRequest";
CreateSnapshotRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "collection_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
export { CreateSnapshotRequest };
/**
 * @generated from message qdrant.ListSnapshotsRequest
 */
class ListSnapshotsRequest extends Message {
    constructor(data) {
        super();
        /**
         * Name of the collection
         *
         * @generated from field: string collection_name = 1;
         */
        this.collectionName = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListSnapshotsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListSnapshotsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListSnapshotsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ListSnapshotsRequest, a, b);
    }
}
ListSnapshotsRequest.runtime = proto3;
ListSnapshotsRequest.typeName = "qdrant.ListSnapshotsRequest";
ListSnapshotsRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "collection_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
export { ListSnapshotsRequest };
/**
 * @generated from message qdrant.DeleteSnapshotRequest
 */
class DeleteSnapshotRequest extends Message {
    constructor(data) {
        super();
        /**
         * Name of the collection
         *
         * @generated from field: string collection_name = 1;
         */
        this.collectionName = "";
        /**
         * Name of the collection snapshot
         *
         * @generated from field: string snapshot_name = 2;
         */
        this.snapshotName = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DeleteSnapshotRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteSnapshotRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteSnapshotRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteSnapshotRequest, a, b);
    }
}
DeleteSnapshotRequest.runtime = proto3;
DeleteSnapshotRequest.typeName = "qdrant.DeleteSnapshotRequest";
DeleteSnapshotRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "collection_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "snapshot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
export { DeleteSnapshotRequest };
/**
 * @generated from message qdrant.SnapshotDescription
 */
class SnapshotDescription extends Message {
    constructor(data) {
        super();
        /**
         * Name of the snapshot
         *
         * @generated from field: string name = 1;
         */
        this.name = "";
        /**
         * Size of the snapshot in bytes
         *
         * @generated from field: int64 size = 3;
         */
        this.size = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SnapshotDescription().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SnapshotDescription().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SnapshotDescription().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SnapshotDescription, a, b);
    }
}
SnapshotDescription.runtime = proto3;
SnapshotDescription.typeName = "qdrant.SnapshotDescription";
SnapshotDescription.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "creation_time", kind: "message", T: Timestamp },
    { no: 3, name: "size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "checksum", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
export { SnapshotDescription };
/**
 * @generated from message qdrant.CreateSnapshotResponse
 */
class CreateSnapshotResponse extends Message {
    constructor(data) {
        super();
        /**
         * Time spent to process
         *
         * @generated from field: double time = 2;
         */
        this.time = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateSnapshotResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateSnapshotResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateSnapshotResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateSnapshotResponse, a, b);
    }
}
CreateSnapshotResponse.runtime = proto3;
CreateSnapshotResponse.typeName = "qdrant.CreateSnapshotResponse";
CreateSnapshotResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "snapshot_description", kind: "message", T: SnapshotDescription },
    { no: 2, name: "time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
]);
export { CreateSnapshotResponse };
/**
 * @generated from message qdrant.ListSnapshotsResponse
 */
class ListSnapshotsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated qdrant.SnapshotDescription snapshot_descriptions = 1;
         */
        this.snapshotDescriptions = [];
        /**
         * Time spent to process
         *
         * @generated from field: double time = 2;
         */
        this.time = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListSnapshotsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListSnapshotsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListSnapshotsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ListSnapshotsResponse, a, b);
    }
}
ListSnapshotsResponse.runtime = proto3;
ListSnapshotsResponse.typeName = "qdrant.ListSnapshotsResponse";
ListSnapshotsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "snapshot_descriptions", kind: "message", T: SnapshotDescription, repeated: true },
    { no: 2, name: "time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
]);
export { ListSnapshotsResponse };
/**
 * @generated from message qdrant.DeleteSnapshotResponse
 */
class DeleteSnapshotResponse extends Message {
    constructor(data) {
        super();
        /**
         * Time spent to process
         *
         * @generated from field: double time = 1;
         */
        this.time = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DeleteSnapshotResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteSnapshotResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteSnapshotResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteSnapshotResponse, a, b);
    }
}
DeleteSnapshotResponse.runtime = proto3;
DeleteSnapshotResponse.typeName = "qdrant.DeleteSnapshotResponse";
DeleteSnapshotResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
]);
export { DeleteSnapshotResponse };
